{"version":3,"sources":["serviceWorker.js","model/action/AppAction.js","model/action/HumitureAction.js","model/reducer/HumitureReducer.js","model/reducer/AppReducer.js","model/reducer/index.js","model/store/store.js","app/component/HumitureComponent.jsx","app/container/Humiture.js","app/component/CarComponent.jsx","app/container/Car.js","app/component/AppComponent.jsx","app/container/App.js","index.js"],"names":["Boolean","window","location","hostname","match","setSocket","socket","type","setHumiture","humiture","HumitureReducer","state","arguments","length","undefined","action","Object","objectSpread","AppReducer","combineReducers","appReducer","humitureReducer","store","createStore","reducer","HumitureComponent","_this","this","temperatureChart","echarts","init","document","getElementById","humidityChart","onresize","resize","setOption","tooltip","formatter","obj","seriesName","value","series","name","radius","min","max","endAngle","splitNumber","axisLine","lineStyle","width","axisTick","color","splitLine","pointer","title","offsetCenter","detail","fontWeight","data","show","temperatureOption","getOption","props","temp","humidityOption","humi","react_default","a","createElement","className","id","style","height","Component","Humiture","connect","CarComponent","moveCar","direction","message","car","emit","JSON","stringify","clientWidth","_this2","maxWidth","margin","onClick","index_es","icon","faCaretUp","size","href","faStop","Car","AppComponent","_this$props","require","on","parse","faRobot","container_Humiture","container_Car","App","dispatch","ReactDOM","render","es","container_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e5d440b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_SOCKET = 'SET_SOCKET';\r\n\r\nexport const setSocket = (socket) => ({\r\n  type: SET_SOCKET,\r\n  socket\r\n});","export const SET_HUMITURE = 'SET_HUMITURE';\r\n\r\nexport const setHumiture = (humiture) => ({\r\n  type: SET_HUMITURE,\r\n  humiture\r\n});","import {SET_HUMITURE} from './../action';\r\n\r\nconst HumitureReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_HUMITURE:\r\n      const {humiture} = action;\r\n      return {\r\n        humiture: {...humiture}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default HumitureReducer;","import {SET_SOCKET} from './../action';\r\n\r\nconst AppReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_SOCKET:\r\n      const {socket} = action;\r\n      return {\r\n        socket\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;","import {combineReducers} from 'redux';\r\nimport HumitureReducer from './HumitureReducer';\r\nimport AppReducer from './AppReducer';\r\n\r\nexport default combineReducers({\r\n  appReducer: AppReducer,\r\n  humitureReducer: HumitureReducer\r\n});","import {createStore} from 'redux';\r\nimport reducer from './../reducer';\r\n\r\nconst initValue = {\r\n  appReducer: {},\r\n  humitureReducer: {\r\n    humiture: {}\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer, initValue);\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/gauge';\r\nimport 'echarts/theme/macarons';\r\n\r\nclass HumitureComponent extends Component {\r\n\r\n  componentDidMount() {\r\n    this.temperatureChart = echarts.init(document.getElementById('temperature'), 'macarons');\r\n    this.humidityChart = echarts.init(document.getElementById('humidity'), 'macarons');\r\n    window.onresize = () => {\r\n      this.temperatureChart.resize();\r\n      this.humidityChart.resize();\r\n    };\r\n    this.temperatureChart.setOption({\r\n      tooltip: {\r\n        formatter: (obj) => {\r\n          return obj.seriesName + '<br>' + obj.value + '℃ / ' + (obj.value * 1.8 + 32) + '℉';\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Temperature',\r\n          type: 'gauge',\r\n          radius: '90%',\r\n          min: -40,\r\n          max: 60,\r\n          endAngle: 0,\r\n          splitNumber: 10,\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 8\r\n            }\r\n          },\r\n          axisTick: {\r\n            length: 12,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          splitLine: {\r\n            length: 15,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          pointer: {\r\n            width: 5\r\n          },\r\n          title: {\r\n            offsetCenter: [0, '-20%'],\r\n          },\r\n          detail: {\r\n            fontWeight: 'bolder'\r\n          },\r\n          data: [{value: 0, name: '℃ / ℉'}]\r\n        },\r\n        {\r\n          type: 'gauge',\r\n          radius: '65%',\r\n          min: -40,\r\n          max: 140,\r\n          endAngle: 0,\r\n          splitNumber: 9,\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 5\r\n            }\r\n          },\r\n          axisTick: {\r\n            length: 8,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          splitLine: {\r\n            length: 10,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          pointer: {\r\n            show: false\r\n          },\r\n          detail: {\r\n            show: false\r\n          },\r\n        }\r\n      ]\r\n    });\r\n    this.humidityChart.setOption({\r\n      tooltip: {\r\n        formatter: (obj) => {\r\n          return obj.seriesName + '<br>' + obj.value + '%RH';\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Humidity',\r\n          type: 'gauge',\r\n          radius: '90%',\r\n          min: 0,\r\n          max: 100,\r\n          endAngle: -45,\r\n          splitNumber: 10,\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 8\r\n            }\r\n          },\r\n          axisTick: {\r\n            length: 12,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          splitLine: {\r\n            length: 15,\r\n            lineStyle: {\r\n              color: 'auto'\r\n            }\r\n          },\r\n          pointer: {\r\n            width: 5\r\n          },\r\n          title: {\r\n            offsetCenter: [0, '-20%'],\r\n          },\r\n          detail: {\r\n            fontWeight: 'bolder'\r\n          },\r\n          data: [{value: 0, name: '%RH'}]\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const temperatureOption = this.temperatureChart.getOption();\r\n    temperatureOption.series[0].data[0].value = this.props.humiture.temp;\r\n    this.temperatureChart.setOption(temperatureOption);\r\n\r\n    const humidityOption = this.humidityChart.getOption();\r\n    humidityOption.series[0].data[0].value = this.props.humiture.humi;\r\n    this.humidityChart.setOption(humidityOption);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 col-xs-12\">\r\n            <div id=\"temperature\" style={{width: '100%', height: 300}}></div>\r\n          </div>\r\n          <div className=\"col-sm-6 col-xs-12\">\r\n            <div id=\"humidity\" style={{width: '100%', height: 300}}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HumitureComponent;","import {connect} from 'react-redux';\r\nimport HumitureComponent from '../component/HumitureComponent';\r\n\r\nfunction mapStateToProps(state) {\r\n  return state.humitureReducer;\r\n}\r\n\r\nconst Humiture = connect(mapStateToProps)(HumitureComponent);\r\n\r\nexport default Humiture;","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCaretUp} from '@fortawesome/free-solid-svg-icons';\r\nimport {faStop} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass CarComponent extends Component {\r\n  componentDidMount() {\r\n    this.height = document.getElementById('remoteControl').clientWidth;\r\n  }\r\n\r\n  moveCar = (direction) => {\r\n    const {socket} = this.props;\r\n    const message = {\r\n      car: {\r\n        direction: direction\r\n      }\r\n    };\r\n    socket.emit('car', JSON.stringify(message));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"remoteControl\" style={{\r\n          width: '80%',\r\n          height: this.height,\r\n          maxWidth: '400px',\r\n          margin: 'auto'\r\n        }}>\r\n          <div className=\"menu-container\">\r\n            <div className=\"menu-wrapper\">\r\n              <ul>\r\n                <li>\r\n                  <span onClick={() => this.moveCar('F')}>\r\n                    <span>\r\n                      <FontAwesomeIcon icon={faCaretUp} size=\"5x\"/>\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <span href=\"#\" onClick={() => this.moveCar('R')}>\r\n                    <span>\r\n                      <FontAwesomeIcon icon={faCaretUp} size=\"5x\"/>\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <span href=\"#\" onClick={() => this.moveCar('B')}>\r\n                    <span>\r\n                      <FontAwesomeIcon icon={faCaretUp} size=\"5x\"/>\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <span href=\"#\" onClick={() => this.moveCar('L')}>\r\n                    <span>\r\n                      <FontAwesomeIcon icon={faCaretUp} size=\"5x\"/>\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <ul>\r\n              <li>\r\n                <span href=\"#\" onClick={() => this.moveCar('S')}>\r\n                  <FontAwesomeIcon icon={faStop} size=\"3x\"/>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CarComponent;","import {connect} from 'react-redux';\r\nimport CarComponent from './../component/CarComponent';\r\n\r\nfunction mapStateToProps(state) {\r\n  return state.appReducer;\r\n}\r\n\r\nconst Car = connect(mapStateToProps)(CarComponent);\r\n\r\nexport default Car;","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faRobot} from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport Humiture from './../container/Humiture';\nimport Car from './../container/Car';\n\nclass AppComponent extends Component {\n\n  componentDidMount() {\n    const {setSocket, setHumiture} = this.props;\n    const socket = require('socket.io-client')(':8990');\n    socket.on('ht', (data) => {\n      const humiture = JSON.parse(data);\n      setHumiture(humiture);\n    });\n    setSocket(socket);\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-inverse navbar-fixed-top app-navbar-blue\">\n          <div className=\"container app-container\">\n            <FontAwesomeIcon icon={faRobot} size=\"3x\"/>\n            <span className=\"app-container-title\">Intelligent Robot</span>\n          </div>\n        </nav>\n        <div className=\"app-content\">\n          <Humiture/>\n          <Car/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AppComponent;\n","import {connect} from 'react-redux';\r\nimport {setSocket, setHumiture} from '../../model/action';\r\nimport AppComponent from './../component/AppComponent';\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setSocket: (socket) => dispatch(setSocket(socket)),\r\n    setHumiture: (humiture) => dispatch(setHumiture(humiture))\r\n  };\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './model/store/store';\nimport App from './app/container/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}